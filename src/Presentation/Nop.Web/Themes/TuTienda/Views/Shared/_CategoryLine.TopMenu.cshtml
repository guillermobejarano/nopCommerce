@model TopMenuModel.CategoryLineModel
@{ 
    //subcategories
    var subCategories = Model.ResponsiveMobileMenu ?
        //responsive (all categories)
        Model.Category.SubCategories :
        //standard design (only categories with "IncludeInTopMenu")
        Model.Category.SubCategories.Where(x => x.IncludeInTopMenu).ToList();

    var hasSubcategory = "with-subcategories";
    if (subCategories.Count <= 0)
    {
        hasSubcategory = "lastLevelCategory";
    }
}
<li class="has-sublist mega-menu-categories">
    <a href="@Url.RouteUrl("Category", new { SeName = Model.Category.SeName })" class="@hasSubcategory">
        @Model.Category.Name
    @if (Model.Category.NumberOfProducts.HasValue)
    {
        <text> </text>@T("Categories.TotalProducts", Model.Category.NumberOfProducts.Value)
    }
</a>
<div class="plus-button"></div>

@{
   
    var levelClass = "";
    if (Model.Level == 0)
    {
        levelClass = "first-level";
    }
    if (subCategories.Count > 0)
    {
        <div class="sublist-toggle"></div>
        <div class="sublist-wrap">
            <ul class="sublist @levelClass">
                @foreach (var subCategory in subCategories)
                {
                    var categoryLineModel = new TopMenuModel.CategoryLineModel
                    {
                        Category = subCategory,
                        Level = Model.Level + 1,
                        ResponsiveMobileMenu = Model.ResponsiveMobileMenu
                    };
                    @await Html.PartialAsync("_CategoryLine.TopMenu", categoryLineModel)
                }
            </ul>
        </div>
    }
}
</li>

@*<li class="has-sublist mega-menu-categories">
    <a href="@Url.RouteUrl("Category", new { SeName = Model.Category.SeName })" class="with-subcategories">@Model.Category.Name
    @if (Model.Category.NumberOfProducts.HasValue)
    {
        <text> </text>@T("Categories.TotalProducts", Model.Category.NumberOfProducts.Value)
    }
    </a>
    @{
        //subcategories
        var subCategories = Model.ResponsiveMobileMenu ?
            //responsive (all categories)
            Model.Category.SubCategories :
            //standard design (only categories with "IncludeInTopMenu")
            Model.Category.SubCategories.Where(x => x.IncludeInTopMenu).ToList();

        var levelClass = "";
        if (Model.Level == 0)
        {
            levelClass = "first-level";
        }
        if (subCategories.Count > 0)
        {
            <div class="sublist-toggle"></div>
            <div class="sublist-wrap">
                <ul class="sublist @levelClass">
                    @foreach (var subCategory in subCategories)
                    {
                        var categoryLineModel = new TopMenuModel.CategoryLineModel
                        {
                            Category = subCategory,
                            Level = Model.Level + 1,
                            ResponsiveMobileMenu = Model.ResponsiveMobileMenu
                        };
                        @await Html.PartialAsync("_CategoryLine.TopMenu", categoryLineModel)
                    }
                </ul>
            </div>
        }
    }
</li>*@